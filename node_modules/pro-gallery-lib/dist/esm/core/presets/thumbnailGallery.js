import { __assign } from "tslib";
import LAYOUTS from '../../common/constants/layout';
import PLACEMENTS from '../../common/constants/placements';
import SCROLL_DIRECTION from '../../common/constants/scrollDirection';
import { calcTargetItemSize } from '../helpers/layoutHelper';
export var fixedStyles = {
    galleryLayout: LAYOUTS.THUMBNAIL,
    enableInfiniteScroll: true,
    cubeRatio: '100%/100%',
    cubeImages: true,
    oneRow: true,
    titlePlacement: PLACEMENTS.SHOW_ON_HOVER,
    scrollDirection: SCROLL_DIRECTION.HORIZONTAL,
    galleryMargin: 0,
    isVertical: false,
    groupSize: 1,
    groupTypes: '1',
    // this params were moved from the presets in layoutHelper and were not tested and checked yet.
    smartCrop: false,
    galleryType: 'Strips',
    hasThumbnails: true,
    enableScroll: true,
    scrollSnap: true,
    isGrid: false,
    isSlider: false,
    isMasonry: false,
    isColumns: false,
    isSlideshow: false,
    cropOnlyFill: false,
    scatter: 0,
    rotatingScatter: '',
    imageMargin: 0,
};
export var createStyles = function (styles) {
    return __assign(__assign(__assign({}, styles), fixedStyles), { targetItemSize: calcTargetItemSize(styles) });
};
//# sourceMappingURL=thumbnailGallery.js.map