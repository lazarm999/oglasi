"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStyles = exports.fixedStyles = void 0;
var tslib_1 = require("tslib");
var layout_1 = tslib_1.__importDefault(require("../../common/constants/layout"));
var infoBehaviourOnHover_1 = tslib_1.__importDefault(require("../../common/constants/infoBehaviourOnHover"));
var scrollDirection_1 = tslib_1.__importDefault(require("../../common/constants/scrollDirection"));
var arrowsVerticalPosition_1 = tslib_1.__importDefault(require("../../common/constants/arrowsVerticalPosition"));
var layoutHelper_1 = require("../helpers/layoutHelper");
exports.fixedStyles = {
    galleryLayout: layout_1.default.SLIDESHOW,
    enableInfiniteScroll: true,
    cubeRatio: '100%/100%',
    cubeImages: true,
    oneRow: true,
    hoveringBehaviour: infoBehaviourOnHover_1.default.NEVER_SHOW,
    scrollDirection: scrollDirection_1.default.HORIZONTAL,
    galleryMargin: 0,
    isVertical: false,
    groupSize: 1,
    groupTypes: '1',
    arrowsVerticalPosition: arrowsVerticalPosition_1.default.IMAGE_CENTER,
    itemBorderWidth: 0,
    itemBorderRadius: 0,
    itemBorderColor: undefined,
    // this params were moved from the presets in layoutHelper and were not tested and checked yet.
    smartCrop: false,
    targetItemSize: 550,
    galleryType: 'Strips',
    fixedColumns: 1,
    hasThumbnails: false,
    enableScroll: true,
    scrollSnap: true,
    isGrid: false,
    isColumns: false,
    isMasonry: false,
    isSlider: false,
    isSlideshow: true,
    cropOnlyFill: false,
    scatter: 0,
    rotatingScatter: '',
    imageMargin: 0,
};
exports.createStyles = function (styles) {
    return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, styles), exports.fixedStyles), { targetItemSize: layoutHelper_1.calcTargetItemSize(styles) });
};
//# sourceMappingURL=slideshowGallery.js.map