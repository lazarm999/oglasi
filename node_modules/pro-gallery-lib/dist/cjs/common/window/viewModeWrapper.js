"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isFormFactorTouch = exports.isFormFactorDesktop = exports.isFormFactorTablet = exports.isFormFactorMobile = exports.isSEOMode = exports.isPreviewMode = exports.isEditMode = exports.isSiteMode = exports.viewModeWrapper = void 0;
var tslib_1 = require("tslib");
var viewMode_1 = tslib_1.__importDefault(require("../constants/viewMode"));
var formFactor_1 = tslib_1.__importDefault(require("../constants/formFactor"));
var ViewModeWrapper = /** @class */ (function () {
    function ViewModeWrapper() {
        this.setViewMode = this.setViewMode.bind(this);
        this.isSiteMode = this.isSiteMode.bind(this);
        this.isEditMode = this.isEditMode.bind(this);
        this.isPreviewMode = this.isPreviewMode.bind(this);
        this.isSEOMode = this.isSEOMode.bind(this);
        this.setFormFactor = this.setFormFactor.bind(this);
        this.isFormFactorDesktop = this.isFormFactorDesktop.bind(this);
        this.isFormFactorMobile = this.isFormFactorMobile.bind(this);
        this.isFormFactorTablet = this.isFormFactorTablet.bind(this);
        this.isFormFactorTouch = this.isFormFactorTouch.bind(this);
        this._viewMode = viewMode_1.default.SITE;
        this._formFactor = formFactor_1.default.DESKTOP;
    }
    ViewModeWrapper.prototype.setViewMode = function (viewMode) {
        this._viewMode = viewMode;
    };
    ViewModeWrapper.prototype.setFormFactor = function (forceVal) {
        this._formFactor = forceVal;
    };
    ViewModeWrapper.prototype.isFormFactorMobile = function () {
        return this._formFactor === formFactor_1.default.MOBILE;
    };
    ViewModeWrapper.prototype.isFormFactorTablet = function () {
        return this._formFactor === formFactor_1.default.TABLET;
    };
    ViewModeWrapper.prototype.isFormFactorDesktop = function () {
        return this._formFactor === formFactor_1.default.DESKTOP;
    };
    ViewModeWrapper.prototype.isFormFactorTouch = function () {
        return this.isMobile() || this.isTablet();
    };
    ViewModeWrapper.prototype.isSiteMode = function () {
        return this._viewMode === viewMode_1.default.SITE;
    };
    ViewModeWrapper.prototype.isEditMode = function () {
        return this._viewMode === viewMode_1.default.EDIT;
    };
    ViewModeWrapper.prototype.isPreviewMode = function () {
        return this._viewMode === viewMode_1.default.PREVIEW;
    };
    ViewModeWrapper.prototype.isSEOMode = function () {
        return this._viewMode === viewMode_1.default.SEO;
    };
    return ViewModeWrapper;
}());
var viewModeWrapper = new ViewModeWrapper();
exports.viewModeWrapper = viewModeWrapper;
var isSiteMode = viewModeWrapper.isSiteMode;
exports.isSiteMode = isSiteMode;
var isEditMode = viewModeWrapper.isEditMode;
exports.isEditMode = isEditMode;
var isPreviewMode = viewModeWrapper.isPreviewMode;
exports.isPreviewMode = isPreviewMode;
var isSEOMode = viewModeWrapper.isSEOMode;
exports.isSEOMode = isSEOMode;
var isFormFactorMobile = viewModeWrapper.isFormFactorMobile;
exports.isFormFactorMobile = isFormFactorMobile;
var isFormFactorTablet = viewModeWrapper.isFormFactorTablet;
exports.isFormFactorTablet = isFormFactorTablet;
var isFormFactorDesktop = viewModeWrapper.isFormFactorDesktop;
exports.isFormFactorDesktop = isFormFactorDesktop;
var isFormFactorTouch = viewModeWrapper.isFormFactorTouch;
exports.isFormFactorTouch = isFormFactorTouch;
//# sourceMappingURL=viewModeWrapper.js.map