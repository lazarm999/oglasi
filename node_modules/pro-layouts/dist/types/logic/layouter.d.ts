export default class Layouter {
    constructor(layoutParams: any);
    ready: boolean;
    pointer: number;
    layoutItems: any[];
    findNeighborItem(itemIdx: any, dir: any): any;
    updateParams(layoutParams: any): void;
    srcItems: any;
    styleParams: any;
    container: any;
    useExistingLayout: boolean | undefined;
    createLayoutOnInit: any;
    showAllItems: boolean | undefined;
    useLayoutStore: boolean | undefined;
    verifyGalleryState(): void;
    calcNumberOfColumns(galleryWidth: any, targetItemSize: any): number;
    findShortestColumn(columns: any, groupIdx: any): any;
    saveExistingLayout(): void;
    prepareLayoutParams(): void;
    strip: any;
    strips: any[] | undefined;
    galleryHeight: any;
    groupItems: any[] | undefined;
    item: {} | undefined;
    maxLoops: number | undefined;
    firstGroup: {} | undefined;
    groups: any[] | undefined;
    targetItemSize: any;
    galleryWidth: number | undefined;
    maxGroupSize: number | undefined;
    groupIdx: number | undefined;
    group: {} | undefined;
    bounds: any;
    numOfCols: number | undefined;
    columns: Column[] | undefined;
    createLayout(layoutParams: any): false | {
        items: any[];
        groups: any[];
        strips: any[];
        columns: {
            idx: any;
            groups: any[];
            width: any;
            height: number;
        }[];
        height: number | undefined;
        width: any;
    };
    lastGroup: {} | undefined;
    colWidth: number | undefined;
    height: number | undefined;
    width: any;
    lastVisibleItemIdxInHeight(height: any): number;
    lastVisibleItemIdx(): number;
    getMaxGroupSize(): number;
    get isLastImage(): boolean;
    get isLastImages(): boolean;
    get imagesLeft(): number;
    get items(): any[];
    get scheme(): {
        items: any[];
        groups: any[];
        strips: any[];
        columns: {
            idx: any;
            groups: any[];
            width: any;
            height: number;
        }[];
        height: number | undefined;
        width: any;
    };
}
import { Column } from "./column";
